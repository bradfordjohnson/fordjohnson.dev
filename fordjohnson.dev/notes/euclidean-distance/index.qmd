---
pagetitle: Euclidean Distance Between Vectors
description: |
  Discover the concept of Euclidean distance, a fundamental metric used in various fields to measure the straight-line distance between points in space. This page covers its mathematical formulation, applications in data analysis, and examples to illustrate its use in clustering and dimensionality reduction.
# execute: 
#   freeze: auto
---

::: column-page
# Euclidean Distance Between Vectors
:::

::::: column-screen
:::: portfolio-banner
::: column-page
Measuring similarity and difference between data points is essential for analysis. One effective approach is **Euclidean distance**, which quantifies how far apart two sets of values are. By calculating the sum of the squares of differences between corresponding elements, we can easily determine which points are most similar or different, helping to reveal patterns and inform decision-making.
:::
::::
:::::

::: {.column-page .binom}

```{r, sum-squared-differences-across-all-years}
#| eval: false
#| code-overflow: wrap

library(tidyverse)

owid_energy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-06/owid-energy.csv')

countries <- c(
  "CAN", "MEX", "BLZ", "CRI", "SLV", "GTM", "HND",
  "NIC", "PAN", "BHS", "BRB", "CUB", "DOM", "HTI",
  "JAM", "TTO","ALB", "AND", "ARM", "AUT", "AZE",
  "BLR", "BEL", "BIH", "BGR", "HRV", "CYP", "CZE",
  "DNK", "EST", "FIN", "FRA", "GEO", "USA", "GRC",
  "HUN", "ISL", "IRL", "ITA", "KAZ", "LVA", "LIE",
  "LTU", "LUX", "MLT", "MDA", "MCO", "MNE", "NLD",
  "MKD", "NOR", "POL", "PRT", "ROU", "RUS", "SMR",
  "SRB", "SVK", "SVN", "ESP", "SWE", "CHE", "UKR",
  "GBR", "VAT"
)

electricity_generation <- owid_energy %>%
  select(country, iso_code, year, electricity_generation) %>%
  filter(year > 2000 & iso_code %in% countries)

target_country <- "DEU" # Germany's 3 letter ISO country code

target_country_generation <- owid_energy %>%
  filter(year > 2000 & iso_code == target_country) %>%
  select(year, electricity_generation) %>%
  rename(target_generation = electricity_generation)

countries_with_similarity_score <- electricity_generation %>%
  left_join(target_country_generation, by = "year") %>%
  group_by(country, iso_code) %>%
  summarize(similarity_score = sqrt(sum((electricity_generation - target_generation)^2, na.rm = TRUE))) %>%
  arrange(similarity_score)
```

```{r}
#| eval: false
#| code-overflow: wrap

```

:::